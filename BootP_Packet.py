# This is DHCP Packet

# http://www.tcpipguide.com/free/t_DHCPMessageFormat.htm
# http://www.tcpipguide.com/free/t_BOOTPMessageFormat.htm

class BootP_Packet:
    def __init__(self):
        '''
        This code represents the general category of the DHCP message; a
        client sending a request to a server uses an Op code of 1, while a
        server replying uses a code of 2. So, for example, a DHCPREQUEST would
        be a request, while a DHCPACK or DHCPNAK is a reply. The actual specific
        type of DHCP message is encoded using the DHCP Message Type option.
        ''''
        # Size = 1
        self.op = 1

        '''
        Hardware Type: This field specifies the  type of hardware used for the
        local network, and is used in exactly the sameway as the equivalent
        field (HRD) in the Address Resolution Protocol (ARP) message format.

        1 == Ethernet
        '''
        self.htype = 1

        '''
        Hardware Address Length: Specifies how long hardware
        addresses are in this message. For Ethernet or other networks
        using IEEE 802 MAC addresses, the value is 6. This is also
        the same as a field in the ARP field format, HLN.
        '''
        # Size = 1
        self.hlen = 6


        ''' Hops: Set to 0 by a client before transmitting a request and used
        by relay agents to control the forwarding of BOOTP and/or DHCP messages.'''
        # Size = 1
        self.hops = 0

        ''' Transaction Identifier: A 32-bit identification field generated by
        the client, to allow it to match up the request with replies received
        from DHCP servers'''
        # Size = 4
        self.xid = None

        ''' Seconds: In BOOTP this field was vaguely defined and not always used.
        For DHCP, it is defined as the number of seconds elapsed since a client
        began an attempt to acquire or renew a lease. This may be used by a busy
        DHCP server to prioritize replies when multiple client requests are
        outstanding.'''
        # Size = 2
        self.secs =  60

        ''' Flags: This corrresponds to formerly empty twobyte field in BootP
        message formated deined by RFC 951, which redefined as Flags field in
        RFC 1542. This Field contains just 1 flag subfield  where
        'B' is broadcast flag and is 0 or 1.  Reserved is set to zero and not used.'''
        # Size = 2
        self.flags = {  "B" : 1 , "Reserved": 0 }


        '''
        Client IP Address: The client puts its own current IP address in this
        field if and only if it has a valid IP address while in the BOUND,
        RENEWING or REBINDING states; otherwise, it sets the field to 0. The
        client can only use this field when its address is actually valid and
        usable, not during the process of acquiring an address. Specifically,
        the client does not use this field to request a particular IP address
        in a lease; it uses the Requested IP Address DHCP option.
        '''
        # Size = 4
        self.ciaddr = '0.0.0.0'

        '''
        “Your” IP Address: The IP address that the server is assigning to the client.
        '''
        # Size = 4
        self.yiaddr = '0.0.0.0'

        '''
        Server IP Address: The meaning of this field is slightly changed in DHCP.
        In BOOTP, it is the IP address of the BOOTP server sending a BOOTREPLY
        message. In DHCP, it is the address of the server that the client should
        use for the next step in the bootstrap process, which may or may not be
        the server sending this reply.

        The sending server always includes its own IP address in the Server
        Identifier DHCP option.
        '''
        # Size = 4
        self.siaddr = '0.0.0.0'
        '''
        Gateway IP Address: This field is used just as it is in BOOTP, to route
        BOOTP messages when BOOTP relay agents are involved to facilitate the
        communication of BOOTP requests and replies between a client and a server
        on different subnets or networks. See the topic on DHCP relaying. As with
        BOOTP, this field is not used by clients and does not represent the server
        giving the client the address of a default router (that's done using the
        Router DHCP option).
        '''
        # Size = 4
        self.giaddr = '0.0.0.0'


        '''
        Client Hardware Address: The hardware (layer two) address of the client,
        which is used for identification and communication.
        '''
        # Size = 16
        self.chaddr = 'mac'

        '''
        Server Name: The server sending a DHCPOFFER or DHCPACK message may optionally
        put its name in this field. This can be a simple text “nickname” or a
        fully-qualified DNS domain name (such as “myserver.organization.org”).

        This field may also be used to carry DHCP options, using the “option
        overload” feature, indicated by the value of the DHCP Option Overload
        option.
        '''
        # Size = 64
        self.sname = "mywebsite.com"
        '''
        Boot Filename: Optionally used by a client to request a particular type
        of boot file in a DHCPDISCOVER message. Used by a server in a DHCPOFFER
        to fully specify a boot file directory path and filename.

        This field may also be used to carry DHCP options, using the “option
        overload” feature, indicated by the value of the DHCP Option Overload option.
        '''
        # Size = 128
        self.file = ""

        '''
        Vendor-Specific Area: Originally created to allow vendors to customize
        BOOTP to the needs of different types of hardware, this field is now
        also used to hold additional vendor-independent configuration information.
        See the next topic, on BOOTP vendor information extensions. It may be used
        by the client and/or the server.
        '''
        # Size = 64
        self.vend = ""
